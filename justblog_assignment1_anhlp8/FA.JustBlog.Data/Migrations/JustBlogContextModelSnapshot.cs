// <auto-generated />
using System;
using FA.JustBlog.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FA.JustBlog.Data.Migrations
{
    [DbContext(typeof(JustBlogContext))]
    partial class JustBlogContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "des 1",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "cat 1",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "cat-1"
                        },
                        new
                        {
                            Id = 2,
                            Description = "des 2",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "cat 2",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "cat-2"
                        },
                        new
                        {
                            Id = 3,
                            Description = "des 3",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "cat 3",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "cat-3"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CommandTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 26, 4, 23, 45, 281, DateTimeKind.Utc).AddTicks(7803));

                    b.Property<string>("CommentHeader")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CommandTime = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            CommentHeader = "header 1",
                            CommentText = "text 1",
                            Email = "user1@mail.com",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "user 1",
                            PostId = 1,
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            CommandTime = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            CommentHeader = "header 2",
                            CommentText = "text 2",
                            Email = "user2@mail.com",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "user 2",
                            PostId = 2,
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            CommandTime = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            CommentHeader = "header 3",
                            CommentText = "text 3",
                            Email = "user3@mail.com",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "user 3",
                            PostId = 3,
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostContent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Published")
                        .HasColumnType("datetime2");

                    b.Property<int>("RateCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("ShortDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            PostContent = "content 1",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Published = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            RateCount = 10,
                            ShortDescription = "des 1",
                            Title = "title 1",
                            TotalRate = 109,
                            UrlSlug = "title-1",
                            ViewCount = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            PostContent = "content 2",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Published = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            RateCount = 10,
                            ShortDescription = "des 2",
                            Title = "title 2",
                            TotalRate = 200,
                            UrlSlug = "title-2",
                            ViewCount = 200
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            PostContent = "content 3",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            RateCount = 200,
                            ShortDescription = "des 3",
                            Title = "title 3",
                            TotalRate = 400,
                            UrlSlug = "title-3",
                            ViewCount = 150
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PostId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTagMap");

                    b.HasData(
                        new
                        {
                            PostId = 1,
                            TagId = 1
                        },
                        new
                        {
                            PostId = 1,
                            TagId = 2
                        },
                        new
                        {
                            PostId = 2,
                            TagId = 3
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 1
                        },
                        new
                        {
                            PostId = 3,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("PostedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlSlug")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Count = 109,
                            Description = "des 1",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "tag 1",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "tag-1"
                        },
                        new
                        {
                            Id = 2,
                            Count = 400,
                            Description = "des 2",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "tag 2",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "tag-2"
                        },
                        new
                        {
                            Id = 3,
                            Count = 500,
                            Description = "des 3",
                            Modified = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            Name = "tag 3",
                            PostedOn = new DateTime(2021, 3, 20, 5, 21, 32, 0, DateTimeKind.Unspecified),
                            UrlSlug = "tag-3"
                        });
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Comment", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Category", "Category")
                        .WithMany("Posts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.PostTagMap", b =>
                {
                    b.HasOne("FA.JustBlog.Core.Models.Post", "Post")
                        .WithMany("PostTagMap")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FA.JustBlog.Core.Models.Tag", "Tag")
                        .WithMany("PostTagMap")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Category", b =>
                {
                    b.Navigation("Posts");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Post", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostTagMap");
                });

            modelBuilder.Entity("FA.JustBlog.Core.Models.Tag", b =>
                {
                    b.Navigation("PostTagMap");
                });
#pragma warning restore 612, 618
        }
    }
}
